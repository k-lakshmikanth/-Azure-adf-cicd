# This workflow is used to automate deployment of the ICR Ingestion ADF into UAT and PROD environments.
# Oveview: This workflow file contains 3 jobs:
# 1. build_ARM_templates - This job checks out the dev ADF JSON/config from the branch (ref) that triggered the workflow, 
#                          builds the ARM templates files (more importantly the ARMTemplateForFactory.json)
#                          and finally uploads it into a temporary storage (artifact form) for later download by
#                          the next job that uses the .json file as input.
# 2. deploy_to_uat_ingestion_adf - This job depends on the successful completion of the build_ARM_templates job.
#                                   This job uses the previously-job-generated ARMTemplateForFactory.json along 
#                                   with the UAT-environment-specific parameters file to deploy to uat ADF.
# 3. deploy_to_production_ingestion_adf - This job depends on the successful completion of the build_ARM_templates job.
#                                         This job uses the previously-job-generated ARMTemplateForFactory.json along
#                                         with the production-environment-specific parameters file to deploy to prod ADF.
#
# NOTE: The build_ARM_templates job always runs,but either (but not both) of the deploy_to_uat_ingestion_adf OR
# deploy_to_production_ingestion_adf jobs will run for a particular invocation of this workflow file. Which of these jobs runs
# depends on the branch (ref) that triggered this workflow.

# Workflow definition begins from here on

name: Deploy ICR Ingestion ADF
run-name: Deploy ICR Ingestion ADF

# Controls the trigger for when this workflow will run.
on:
  # Following line configures this workflow to be manually triggered from the Actions tab
  # The manual trigger option is configured for scenarios where a manual rerun would be necessary without
  # having to rely on a pull request (PR) (e.g. a PR-triggered run fails for whatever reason and we need to re-run
  # manually).
  workflow_dispatch:
  # Following line configures this workflow to be triggered when pull requests (PRs) reach the closed (completed) state,
  # Specifically when the PR has target/base PR branch beinng eighter 'uat' or 'production'.
  pull_request:
    types: [closed]
    branches: [uat, production ]

jobs:
  build_ARM_templates:
    name: Build ARM templates
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Export ARM templates
        id: export
        uses: Azure/data-factory-export-action@v1.2.0
        with:
          # Scince our ADF repository holds all ADF resources under the /ADFIngestion folder, below path argument has to be provided.
          path: ADFIngestion
          # Pass in the dev ADF details like subscription ID, Resource Group Name and DataFactory Name, else the action will fails
          # with ARM template validation errors and is unable to proceed with ARM template generation steps
          id: /subscriptions/${{ secrets.ICR_DEV_INGESTION_ADF_SUBSCRIPTION_ID }}/resourceGroups/${{ secrets.ICR_DEV_INGESTION_ADF_RESOURCE_GROUP_NAME }}/providers/Microsoft.DataFactory/factories/${{ secrets.ICR_DEV_INGESTION_ADF_NAME }}

      # Post successful export/generation of ARM templates, upload to a temp storage location for later download
      # NOTE: Post workflow completion, this uploaded artifact can be downloaded in zip format for upto 90 days (or
      # configured retention age) 
      # from when this workflow run was initiated.
      - name: Upload ARM templates artifact
        uses: actions/upload-artifact@v3.1.1
        with:
          name: armtemplates
          path: ${{ steps.export.outputs.arm-template-directory }}
          if-no-files-found: error

  deploy_to_uat_ingestion_adf:
    # Only run this job if the triggering branch is 'uat'
    if: ${{ github.ref == 'refs/heads/uat' || github.ref_name == 'uat' }}
    # Only run this job if the previous job 'build_ARM_templates' has a success status
    needs: [build_ARM_templates]
    runs-on: ubuntu-latest
    #Specify environment tag to kick in the environment protection rule - namely, manual approval to proceed with deployment
    environment: uat
    steps:
      - name: Checkout
        uses: actions/checkout@v3.2.0

      # Create an Azure security context/session using the credentials stored in the GitHub repository key
      # The credential key is stored in the following format (the values between the <<>> need to be replaced accordingly):
      # ICR_UAT_SPN_KEY_CREDENTIALS_JSON
      # {
      #   "clientId": "<<the SPN's clientID or ApplicationID>>",
      #  "clientSecret": "<<the SPN's key value, obtained from SPN management portal>>",
      #  "subscriptionId": "<<the subscription ID of the SPN's Azure subscription>>",
      #  "tenantId": "<<the Azure directory/teneant ID where the SPN resides in>>",
      #  "resourceManagerEndpointUrl": "https://management.azure.com/"
      # }
      - name: Login to Azure
        uses: azure/login@v1.4.6
        with:
          creds: ${{ secrets.ICR_UAT_SPN_KEY_CREDENTIALS_JSON }}
          enable-AzPSSession: true

      # Download the ARM artifacts from the temp storage location
      - name: Download ARM templates artifact
        uses: actions/download-artifact@v3.0.1
        with:
          name: armtemplates
          path: armtemplates
      
      # Initialize deployment into uat ADF by providing the downloaded ARMTemplateForFactory.json and
      # uat-environment-specific parameters file
      - name: Deploy to uat
        uses: Azure/data-factory-deploy-action@v1.2.0
        with:
          resource-group-name: ${{ secrets.ICR_UAT_INGESTION_ADF_RESOURCE_GROUP_NAME }}
          factory-name: ${{ secrets.ICR_UAT_INGESTION_DATA_FACTORY_NAME }}
          arm-template: armtemplates/ARMTemplateForFactory.json
          parameters: ./uat-ingestion-adf-ARMTemplateParametersForFactory.json

  deploy_to_production_ingestion_adf:
    # Only run this job if the triggering branch is 'production'
    if: ${{ github.ref == 'refs/heads/production' || github.ref_name == 'production' }}
    # Only run this job if the previous job 'build_ARM_templates' has a success status
    needs: [build_ARM_templates]
    name: Deploy to production ADF
    runs-on: ubuntu-latest
    # Specify environment tag to kick in the environment protection rule - namely, manual approval to proceed with deployment
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.2.0
      
      # Create an Azure security context/session using the credentials stored in the GitHub repository key
      # The credential key is stored in the following format (the values between the <<>> need to be replaced accordingly):
      # ICR_PROD_SPN_KEY_CREDENTIALS_JSON
      # {
      #   "clientId": "<<the SPN's clientID or ApplicationID>>",
      #  "clientSecret": "<<the SPN's key value, obtained from SPN management portal>>",
      #  "subscriptionId": "<<the subscription ID of the SPN's Azure subscription>>",
      #  "tenantId": "<<the Azure directory/teneant ID where the SPN resides in>>",
      #  "resourceManagerEndpointUrl": "https://management.azure.com/"
      # }
      - name: Login to Azure
        uses: azure/login@v1.4.6
        with:
          creds: ${{ secrets.ICR_PROD_SPN_KEY_CREDENTIALS_JSON }}
          enable-AzPSSession: true
        
      # Download the ARM artifacts from the temp storage location
      - name: Download ARM templates artifact
        uses: actions/download-artifact@v3.0.1
        with:
          name: armtemplates
          path: armtemplates
      
      # Initialize deployment into production ADF by providing the downloaded ARMTemplateForFactory.json and
      # prod-environment-specific parameters file
      - name: Deploy to production
        uses: Azure/data-factory-deploy-action@v1.2.0
        with:
          resource-group-name: ${{ secrets.ICR_PROD_INGESTION_ADF_RESOURCE_GROUP_NAME }}
          factory-name: ${{ secrets.ICR_PROD_INGESTION_DATA_FACTORY_NAME }}
          armTemplateFile: ./armtemplates/ARMTemplateForFactory.json
          armTemplateParametersFile: ./prod-ingestion-adf-ARMTemplateParametersForFactory.json


########################################## End of workflow file ##########################################